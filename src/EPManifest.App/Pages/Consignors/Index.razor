@page "/consignors"

<AuthorizeView Roles="Administrator, Writer" Context="auth">
    <Authorized>
        @if (_isLoaded == false)
        {
        }
        else
        {
            <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
                <MudTable Items="_consignors" Dense="true" Striped="true" Hover="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Consignors</MudText>
                        <MudToolBarSpacer />
                        <MudButton Color="Color.Tertiary" Variant="Variant.Outlined" OnClick="(() => Create())">New Consignor</MudButton>
                    </ToolBarContent>
                    <ColGroup>
                        <col style="width: 15%" />
                        <col style="width: 50%" />
                        <col style="width: 15%" />
                        <col style="width: 20%" />
                    </ColGroup>
                    <HeaderContent>
                        <MudTh><MudTableSortLabel SortBy="new Func<Core.Consignor, object>(c => c.Code)">Code</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<Core.Consignor, object>(c => c.Name)">Name</MudTableSortLabel></MudTh>
                        <MudTh><MudTableSortLabel SortBy="new Func<Core.Consignor, object>(c => c.Manifests.Count)"># Manifests</MudTableSortLabel></MudTh>
                        <MudTh></MudTh>
                    </HeaderContent>
                    <RowTemplate>
                        <MudTd DataLabel="Code">@context.Code</MudTd>
                        <MudTd DataLabel="Name">@context.Name</MudTd>
                        <MudTd DataLabel="# Manifests">@context.Manifests.Count</MudTd>
                        <MudTd>
                            <MudIconButton Icon="@Icons.Material.Filled.Edit" Color="Color.Primary" OnClick="(() => Edit(context))"></MudIconButton>
                            @if (context.Manifests.Count == 0)
                                {
                                <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Error" OnClick="(() => Delete(context))"></MudIconButton>
                                }
                                else
                                {
                                <MudTooltip Text="Remove from all associated manifests before deleting">
                                    <MudIconButton Icon="@Icons.Material.Filled.Delete" Color="Color.Transparent"></MudIconButton>
                                </MudTooltip>
                                }
                        </MudTd>
                    </RowTemplate>
                    <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>
            </MudContainer>
        }
    </Authorized>
    <NotAuthorized>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-16">
            <MudAlert Severity="Severity.Error"><MudText Typo="Typo.body1">You are not authorized to view this page.</MudText></MudAlert>
            <MudText Class="ml-4 mt-4" Typo="Typo.body1">If you require access to this page, please contact: <MudLink Href="mailto:env.servicedesk@yukon.ca" Typo="Typo.body1" Color="Color.Inherit"><b>env.servicedesk@yukon.ca</b></MudLink></MudText>
        </MudContainer>
    </NotAuthorized>
</AuthorizeView>