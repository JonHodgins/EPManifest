// <auto-generated />
using System;
using EPManifest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPManifest.Data.Migrations
{
    [DbContext(typeof(EPManifestDbContext))]
    [Migration("20210423211518_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPManifest.Core.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("EPManifest.Core.Consignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consignees");
                });

            modelBuilder.Entity("EPManifest.Core.Consignor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Consignors");
                });

            modelBuilder.Entity("EPManifest.Core.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManifestId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManifestId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("EPManifest.Core.Manifest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("ConsigneeId")
                        .HasColumnType("int");

                    b.Property<int?>("ConsignorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateScheduledArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateShipped")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ConsigneeId");

                    b.HasIndex("ConsignorId");

                    b.ToTable("Manifests");
                });

            modelBuilder.Entity("EPManifest.Core.Item", b =>
                {
                    b.HasOne("EPManifest.Core.Manifest", "Manifest")
                        .WithMany("Items")
                        .HasForeignKey("ManifestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manifest");
                });

            modelBuilder.Entity("EPManifest.Core.Manifest", b =>
                {
                    b.HasOne("EPManifest.Core.Carrier", "Carrier")
                        .WithMany("Manifests")
                        .HasForeignKey("CarrierId");

                    b.HasOne("EPManifest.Core.Consignee", "Consignee")
                        .WithMany("Manifests")
                        .HasForeignKey("ConsigneeId");

                    b.HasOne("EPManifest.Core.Consignor", "Consignor")
                        .WithMany("Manifests")
                        .HasForeignKey("ConsignorId");

                    b.OwnsOne("EPManifest.Core.Address", "ConsigneeAddress", b1 =>
                        {
                            b1.Property<int>("ManifestId")
                                .HasColumnType("int");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AddressLine2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ManifestId");

                            b1.ToTable("ConsigneeAddresses");

                            b1.WithOwner()
                                .HasForeignKey("ManifestId");
                        });

                    b.OwnsOne("EPManifest.Core.Address", "ConsignorAddress", b1 =>
                        {
                            b1.Property<int>("ManifestId")
                                .HasColumnType("int");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AddressLine2")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PhoneNumber")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ManifestId");

                            b1.ToTable("ConsignorAddresses");

                            b1.WithOwner()
                                .HasForeignKey("ManifestId");
                        });

                    b.Navigation("Carrier");

                    b.Navigation("Consignee");

                    b.Navigation("ConsigneeAddress");

                    b.Navigation("Consignor");

                    b.Navigation("ConsignorAddress");
                });

            modelBuilder.Entity("EPManifest.Core.Carrier", b =>
                {
                    b.Navigation("Manifests");
                });

            modelBuilder.Entity("EPManifest.Core.Consignee", b =>
                {
                    b.Navigation("Manifests");
                });

            modelBuilder.Entity("EPManifest.Core.Consignor", b =>
                {
                    b.Navigation("Manifests");
                });

            modelBuilder.Entity("EPManifest.Core.Manifest", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
