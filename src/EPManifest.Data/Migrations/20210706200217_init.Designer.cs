// <auto-generated />
using System;
using EPManifest.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EPManifest.Data.Migrations
{
    [DbContext(typeof(EPManifestDbContext))]
    [Migration("20210706200217_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EPManifest.Core.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Carriers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "YG80-899",
                            Name = "A1 Delivery"
                        },
                        new
                        {
                            Id = 2,
                            Code = "YG81-671",
                            Name = "Pacific Northwest Freight"
                        },
                        new
                        {
                            Id = 3,
                            Code = "YG80-909",
                            Name = "AP Freight"
                        },
                        new
                        {
                            Id = 4,
                            Code = "YG42-554",
                            Name = "NM Shipping Inc"
                        },
                        new
                        {
                            Id = 5,
                            Code = "YG81-241",
                            Name = "Frank's Freight"
                        });
                });

            modelBuilder.Entity("EPManifest.Core.Consignee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Consignees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "YG80-120",
                            Name = "Pete's Disposal"
                        },
                        new
                        {
                            Id = 2,
                            Code = "YG81-301",
                            Name = "ATI Environmental"
                        },
                        new
                        {
                            Id = 3,
                            Code = "YG42-757",
                            Name = "EQ Enviro"
                        },
                        new
                        {
                            Id = 4,
                            Code = "YG81-486",
                            Name = "Whitehorse Landfill"
                        },
                        new
                        {
                            Id = 5,
                            Code = "YG41-309",
                            Name = "YAE"
                        });
                });

            modelBuilder.Entity("EPManifest.Core.Consignor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Consignors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "YG41-235",
                            Name = "Carmacks Health Clinic"
                        },
                        new
                        {
                            Id = 2,
                            Code = "YG42-501",
                            Name = "Mayo Health Centre"
                        },
                        new
                        {
                            Id = 3,
                            Code = "YG42-890",
                            Name = "Whitehorse General Hospital"
                        },
                        new
                        {
                            Id = 4,
                            Code = "YG81-153",
                            Name = "Teslin Health Centre"
                        },
                        new
                        {
                            Id = 5,
                            Code = "44-041",
                            Name = "Whistle Bend Place"
                        },
                        new
                        {
                            Id = 6,
                            Code = "44-452",
                            Name = "Rowe - Botsford"
                        },
                        new
                        {
                            Id = 7,
                            Code = "44-767",
                            Name = "Johnston Inc"
                        },
                        new
                        {
                            Id = 8,
                            Code = "44-697",
                            Name = "Hammes - Collier"
                        },
                        new
                        {
                            Id = 9,
                            Code = "44-848",
                            Name = "Rippin, DuBuque and Goyette"
                        },
                        new
                        {
                            Id = 10,
                            Code = "44-378",
                            Name = "Huels - Fritsch"
                        },
                        new
                        {
                            Id = 11,
                            Code = "44-173",
                            Name = "Sporer Inc"
                        },
                        new
                        {
                            Id = 12,
                            Code = "44-741",
                            Name = "Smitham LLC"
                        },
                        new
                        {
                            Id = 13,
                            Code = "44-948",
                            Name = "Jenkins LLC"
                        },
                        new
                        {
                            Id = 14,
                            Code = "44-695",
                            Name = "Reichert - Cummerata"
                        },
                        new
                        {
                            Id = 15,
                            Code = "44-480",
                            Name = "Kassulke and Sons"
                        });
                });

            modelBuilder.Entity("EPManifest.Core.ConsignorManifest", b =>
                {
                    b.Property<int>("ManifestId")
                        .HasColumnType("int");

                    b.Property<int>("ConsignorId")
                        .HasColumnType("int");

                    b.HasKey("ManifestId", "ConsignorId");

                    b.HasIndex("ConsignorId");

                    b.ToTable("ConsignorManifest");

                    b.HasData(
                        new
                        {
                            ManifestId = 1,
                            ConsignorId = 2
                        },
                        new
                        {
                            ManifestId = 2,
                            ConsignorId = 4
                        },
                        new
                        {
                            ManifestId = 3,
                            ConsignorId = 3
                        },
                        new
                        {
                            ManifestId = 4,
                            ConsignorId = 1
                        },
                        new
                        {
                            ManifestId = 5,
                            ConsignorId = 2
                        },
                        new
                        {
                            ManifestId = 6,
                            ConsignorId = 4
                        },
                        new
                        {
                            ManifestId = 7,
                            ConsignorId = 3
                        },
                        new
                        {
                            ManifestId = 8,
                            ConsignorId = 1
                        },
                        new
                        {
                            ManifestId = 9,
                            ConsignorId = 4
                        },
                        new
                        {
                            ManifestId = 10,
                            ConsignorId = 1
                        },
                        new
                        {
                            ManifestId = 11,
                            ConsignorId = 4
                        },
                        new
                        {
                            ManifestId = 12,
                            ConsignorId = 4
                        },
                        new
                        {
                            ManifestId = 13,
                            ConsignorId = 3
                        },
                        new
                        {
                            ManifestId = 14,
                            ConsignorId = 1
                        },
                        new
                        {
                            ManifestId = 15,
                            ConsignorId = 4
                        },
                        new
                        {
                            ManifestId = 16,
                            ConsignorId = 1
                        },
                        new
                        {
                            ManifestId = 17,
                            ConsignorId = 1
                        },
                        new
                        {
                            ManifestId = 18,
                            ConsignorId = 4
                        },
                        new
                        {
                            ManifestId = 19,
                            ConsignorId = 2
                        },
                        new
                        {
                            ManifestId = 20,
                            ConsignorId = 2
                        },
                        new
                        {
                            ManifestId = 7,
                            ConsignorId = 14
                        },
                        new
                        {
                            ManifestId = 16,
                            ConsignorId = 6
                        });
                });

            modelBuilder.Entity("EPManifest.Core.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ManifestId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(16, 2)
                        .HasColumnType("decimal(16,2)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)");

                    b.HasKey("Id");

                    b.HasIndex("ManifestId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Voluptatibus magni natus.",
                            ManifestId = 1,
                            Quantity = 15773m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Voluptas quis enim et voluptatem quidem.",
                            ManifestId = 2,
                            Quantity = 4694m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Cumque aliquid rem tempora.",
                            ManifestId = 3,
                            Quantity = 12118m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Eos autem rem quasi temporibus asperiores.",
                            ManifestId = 4,
                            Quantity = 19041m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ut voluptas omnis.",
                            ManifestId = 5,
                            Quantity = 19815m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Velit consequuntur sunt dolorum accusamus sint.",
                            ManifestId = 6,
                            Quantity = 4824m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Qui facilis illum.",
                            ManifestId = 7,
                            Quantity = 7537m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Reiciendis maxime enim.",
                            ManifestId = 8,
                            Quantity = 15409m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Corporis ea dolor non eligendi laudantium impedit.",
                            ManifestId = 9,
                            Quantity = 12627m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Nobis deleniti ipsa.",
                            ManifestId = 10,
                            Quantity = 19824m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Aliquam earum et velit.",
                            ManifestId = 11,
                            Quantity = 8230m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Harum aut aut sit eos eum aut.",
                            ManifestId = 12,
                            Quantity = 12016m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Doloremque maiores et laboriosam.",
                            ManifestId = 13,
                            Quantity = 16448m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Quidem doloremque dicta.",
                            ManifestId = 14,
                            Quantity = 19767m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Sit vel rem odit.",
                            ManifestId = 15,
                            Quantity = 19871m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Fugiat optio expedita voluptas minus commodi debitis.",
                            ManifestId = 16,
                            Quantity = 17555m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Velit velit amet animi cum.",
                            ManifestId = 17,
                            Quantity = 11547m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Repellendus perspiciatis voluptatem dicta.",
                            ManifestId = 18,
                            Quantity = 2803m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Consequuntur non rem quo assumenda.",
                            ManifestId = 19,
                            Quantity = 2227m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Repellendus quos qui.",
                            ManifestId = 20,
                            Quantity = 15154m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Ea voluptas delectus qui omnis.",
                            ManifestId = 17,
                            Quantity = 15940m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Dicta quis cum sunt cumque dolore et.",
                            ManifestId = 11,
                            Quantity = 9065m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Et ullam hic a excepturi autem.",
                            ManifestId = 12,
                            Quantity = 13878m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Natus est ullam.",
                            ManifestId = 13,
                            Quantity = 10425m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Nam eum vel accusantium rerum delectus.",
                            ManifestId = 5,
                            Quantity = 11865m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Ea quo voluptate tempore.",
                            ManifestId = 4,
                            Quantity = 8183m,
                            State = "Solid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Minus fugit sit in.",
                            ManifestId = 3,
                            Quantity = 9081m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Est molestias aut quam quo.",
                            ManifestId = 13,
                            Quantity = 7812m,
                            State = "Solid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Asperiores sint impedit.",
                            ManifestId = 5,
                            Quantity = 8966m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Sequi illo necessitatibus vero.",
                            ManifestId = 1,
                            Quantity = 3268m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Et velit similique pariatur at.",
                            ManifestId = 11,
                            Quantity = 14984m,
                            State = "Solid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Maiores alias sit illum autem.",
                            ManifestId = 17,
                            Quantity = 7810m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Nam et sequi.",
                            ManifestId = 20,
                            Quantity = 4489m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Accusamus ut aut quis necessitatibus.",
                            ManifestId = 5,
                            Quantity = 16794m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Eos ipsum accusantium.",
                            ManifestId = 15,
                            Quantity = 18566m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 36,
                            Description = "Eos labore aspernatur laudantium.",
                            ManifestId = 14,
                            Quantity = 19509m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Aut quaerat ut aspernatur necessitatibus a quia.",
                            ManifestId = 11,
                            Quantity = 13002m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Dolor blanditiis officia.",
                            ManifestId = 14,
                            Quantity = 13715m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Id ut voluptate reiciendis ea dolorem omnis.",
                            ManifestId = 8,
                            Quantity = 8239m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Delectus tenetur voluptatum rerum ea inventore.",
                            ManifestId = 18,
                            Quantity = 4969m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Modi harum ut.",
                            ManifestId = 11,
                            Quantity = 19194m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Ipsam atque molestiae voluptatem sed at consequatur.",
                            ManifestId = 9,
                            Quantity = 13843m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Minus omnis sint ratione.",
                            ManifestId = 13,
                            Quantity = 4465m,
                            State = "Solid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Odio maiores voluptatem praesentium sit sit nisi.",
                            ManifestId = 16,
                            Quantity = 3410m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Molestiae expedita non ipsa aut earum.",
                            ManifestId = 8,
                            Quantity = 1819m,
                            State = "Solid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 46,
                            Description = "Sunt aperiam et tempore porro dicta id.",
                            ManifestId = 10,
                            Quantity = 16060m,
                            State = "Gas",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Dolores omnis est aliquid tempore voluptatem occaecati.",
                            ManifestId = 18,
                            Quantity = 4048m,
                            State = "Solid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 48,
                            Description = "Saepe impedit odit quam.",
                            ManifestId = 7,
                            Quantity = 722m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 49,
                            Description = "Dolor inventore molestiae placeat.",
                            ManifestId = 2,
                            Quantity = 10169m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 50,
                            Description = "Aperiam ipsum blanditiis dolor quo ut fugit.",
                            ManifestId = 20,
                            Quantity = 11804m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 51,
                            Description = "Ipsum tempora velit consequuntur omnis consequatur voluptatibus.",
                            ManifestId = 7,
                            Quantity = 6362m,
                            State = "Solid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 52,
                            Description = "Dolorum ipsam porro voluptatem.",
                            ManifestId = 8,
                            Quantity = 12072m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 53,
                            Description = "Libero dolorem ducimus.",
                            ManifestId = 20,
                            Quantity = 17054m,
                            State = "Liquid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 54,
                            Description = "Ducimus dolores commodi possimus.",
                            ManifestId = 17,
                            Quantity = 5561m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 55,
                            Description = "Qui dolorum aut consequatur sed porro.",
                            ManifestId = 4,
                            Quantity = 1074m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 56,
                            Description = "Pariatur maiores aliquam culpa voluptate.",
                            ManifestId = 9,
                            Quantity = 18098m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 57,
                            Description = "Nam perferendis qui perferendis.",
                            ManifestId = 16,
                            Quantity = 6420m,
                            State = "Solid",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 58,
                            Description = "Nemo aut magnam voluptatibus.",
                            ManifestId = 7,
                            Quantity = 8690m,
                            State = "Liquid",
                            Unit = "L"
                        },
                        new
                        {
                            Id = 59,
                            Description = "Odit qui voluptas tenetur animi.",
                            ManifestId = 10,
                            Quantity = 5771m,
                            State = "Gas",
                            Unit = "Kg"
                        },
                        new
                        {
                            Id = 60,
                            Description = "Aliquid quis molestias et ab ut.",
                            ManifestId = 20,
                            Quantity = 1289m,
                            State = "Solid",
                            Unit = "L"
                        });
                });

            modelBuilder.Entity("EPManifest.Core.Manifest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CarrierId")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ConsigneeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateScheduledArrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateShipped")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.HasIndex("ConsigneeId");

                    b.ToTable("Manifests");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarrierId = 5,
                            Code = "YT91393-5",
                            ConsigneeId = 2,
                            DateScheduledArrival = new DateTime(2021, 10, 18, 14, 58, 20, 446, DateTimeKind.Unspecified).AddTicks(1897),
                            DateShipped = new DateTime(2021, 8, 21, 0, 5, 41, 812, DateTimeKind.Unspecified).AddTicks(2681)
                        },
                        new
                        {
                            Id = 2,
                            CarrierId = 4,
                            Code = "YT57620-3",
                            ConsigneeId = 4,
                            DateScheduledArrival = new DateTime(2021, 9, 23, 4, 15, 58, 411, DateTimeKind.Unspecified).AddTicks(93),
                            DateShipped = new DateTime(2021, 6, 24, 8, 17, 13, 611, DateTimeKind.Unspecified).AddTicks(3190)
                        },
                        new
                        {
                            Id = 3,
                            CarrierId = 1,
                            Code = "YT33847-5",
                            ConsigneeId = 5,
                            DateScheduledArrival = new DateTime(2021, 12, 30, 5, 51, 3, 878, DateTimeKind.Unspecified).AddTicks(9588),
                            DateShipped = new DateTime(2021, 7, 22, 10, 48, 16, 63, DateTimeKind.Unspecified).AddTicks(6365)
                        },
                        new
                        {
                            Id = 4,
                            CarrierId = 1,
                            Code = "YT04982-6",
                            ConsigneeId = 2,
                            DateScheduledArrival = new DateTime(2021, 10, 11, 19, 0, 6, 128, DateTimeKind.Unspecified).AddTicks(6515),
                            DateShipped = new DateTime(2021, 5, 23, 12, 6, 53, 548, DateTimeKind.Unspecified).AddTicks(6120)
                        },
                        new
                        {
                            Id = 5,
                            CarrierId = 3,
                            Code = "YT85624-8",
                            ConsigneeId = 5,
                            DateScheduledArrival = new DateTime(2021, 9, 13, 6, 52, 53, 729, DateTimeKind.Unspecified).AddTicks(2465),
                            DateShipped = new DateTime(2021, 5, 26, 15, 51, 58, 655, DateTimeKind.Unspecified).AddTicks(5711)
                        },
                        new
                        {
                            Id = 6,
                            CarrierId = 5,
                            Code = "YT12820-6",
                            ConsigneeId = 2,
                            DateScheduledArrival = new DateTime(2021, 12, 2, 8, 42, 48, 230, DateTimeKind.Unspecified).AddTicks(7568),
                            DateShipped = new DateTime(2021, 5, 29, 18, 28, 13, 496, DateTimeKind.Unspecified).AddTicks(6591)
                        },
                        new
                        {
                            Id = 7,
                            CarrierId = 5,
                            Code = "YT51293-0",
                            ConsigneeId = 4,
                            DateScheduledArrival = new DateTime(2021, 10, 11, 10, 46, 7, 900, DateTimeKind.Unspecified).AddTicks(4611),
                            DateShipped = new DateTime(2021, 8, 29, 4, 18, 53, 288, DateTimeKind.Unspecified).AddTicks(8780)
                        },
                        new
                        {
                            Id = 8,
                            CarrierId = 4,
                            Code = "YT06603-8",
                            ConsigneeId = 4,
                            DateScheduledArrival = new DateTime(2021, 12, 19, 7, 46, 21, 439, DateTimeKind.Unspecified).AddTicks(3889),
                            DateShipped = new DateTime(2021, 8, 29, 12, 59, 51, 7, DateTimeKind.Unspecified).AddTicks(7015)
                        },
                        new
                        {
                            Id = 9,
                            CarrierId = 4,
                            Code = "YT64058-7",
                            ConsigneeId = 3,
                            DateScheduledArrival = new DateTime(2021, 11, 18, 22, 18, 31, 563, DateTimeKind.Unspecified).AddTicks(6991),
                            DateShipped = new DateTime(2021, 8, 8, 2, 0, 38, 364, DateTimeKind.Unspecified).AddTicks(7252)
                        },
                        new
                        {
                            Id = 10,
                            CarrierId = 4,
                            Code = "YT43837-7",
                            ConsigneeId = 2,
                            DateScheduledArrival = new DateTime(2021, 10, 19, 10, 32, 59, 995, DateTimeKind.Unspecified).AddTicks(9434),
                            DateShipped = new DateTime(2021, 8, 13, 15, 41, 51, 527, DateTimeKind.Unspecified).AddTicks(1802)
                        },
                        new
                        {
                            Id = 11,
                            CarrierId = 5,
                            Code = "YT00580-4",
                            ConsigneeId = 4,
                            DateScheduledArrival = new DateTime(2021, 9, 22, 5, 27, 28, 392, DateTimeKind.Unspecified).AddTicks(6507),
                            DateShipped = new DateTime(2021, 8, 20, 9, 0, 18, 355, DateTimeKind.Unspecified).AddTicks(5381)
                        },
                        new
                        {
                            Id = 12,
                            CarrierId = 4,
                            Code = "YT85921-0",
                            ConsigneeId = 1,
                            DateScheduledArrival = new DateTime(2021, 11, 15, 0, 1, 24, 657, DateTimeKind.Unspecified).AddTicks(3562),
                            DateShipped = new DateTime(2021, 5, 11, 9, 34, 16, 156, DateTimeKind.Unspecified).AddTicks(4755)
                        },
                        new
                        {
                            Id = 13,
                            CarrierId = 2,
                            Code = "YT40039-6",
                            ConsigneeId = 4,
                            DateScheduledArrival = new DateTime(2021, 11, 11, 0, 26, 16, 62, DateTimeKind.Unspecified).AddTicks(2226),
                            DateShipped = new DateTime(2021, 6, 9, 19, 49, 16, 796, DateTimeKind.Unspecified).AddTicks(922)
                        },
                        new
                        {
                            Id = 14,
                            CarrierId = 2,
                            Code = "YT50858-6",
                            ConsigneeId = 5,
                            DateScheduledArrival = new DateTime(2021, 10, 24, 17, 9, 23, 220, DateTimeKind.Unspecified).AddTicks(5640),
                            DateShipped = new DateTime(2021, 6, 30, 11, 48, 42, 32, DateTimeKind.Unspecified).AddTicks(8663)
                        },
                        new
                        {
                            Id = 15,
                            CarrierId = 4,
                            Code = "YT07867-8",
                            ConsigneeId = 3,
                            DateScheduledArrival = new DateTime(2021, 11, 29, 13, 56, 0, 761, DateTimeKind.Unspecified).AddTicks(3022),
                            DateShipped = new DateTime(2021, 6, 6, 21, 46, 15, 887, DateTimeKind.Unspecified).AddTicks(6152)
                        },
                        new
                        {
                            Id = 16,
                            CarrierId = 1,
                            Code = "YT65629-0",
                            ConsigneeId = 5,
                            DateScheduledArrival = new DateTime(2021, 10, 24, 6, 20, 12, 716, DateTimeKind.Unspecified).AddTicks(3859),
                            DateShipped = new DateTime(2021, 8, 18, 21, 0, 0, 631, DateTimeKind.Unspecified).AddTicks(4540)
                        },
                        new
                        {
                            Id = 17,
                            CarrierId = 2,
                            Code = "YT63536-8",
                            ConsigneeId = 4,
                            DateScheduledArrival = new DateTime(2021, 10, 27, 16, 34, 44, 260, DateTimeKind.Unspecified).AddTicks(4855),
                            DateShipped = new DateTime(2021, 6, 28, 14, 56, 58, 560, DateTimeKind.Unspecified).AddTicks(5747)
                        },
                        new
                        {
                            Id = 18,
                            CarrierId = 3,
                            Code = "YT08255-6",
                            ConsigneeId = 1,
                            DateScheduledArrival = new DateTime(2021, 9, 14, 23, 19, 38, 15, DateTimeKind.Unspecified).AddTicks(7108),
                            DateShipped = new DateTime(2021, 7, 11, 10, 0, 51, 964, DateTimeKind.Unspecified).AddTicks(4771)
                        },
                        new
                        {
                            Id = 19,
                            CarrierId = 4,
                            Code = "YT21059-9",
                            ConsigneeId = 2,
                            DateScheduledArrival = new DateTime(2021, 12, 3, 5, 22, 59, 385, DateTimeKind.Unspecified).AddTicks(3388),
                            DateShipped = new DateTime(2021, 7, 19, 0, 41, 46, 450, DateTimeKind.Unspecified).AddTicks(9403)
                        },
                        new
                        {
                            Id = 20,
                            CarrierId = 3,
                            Code = "YT78307-6",
                            ConsigneeId = 2,
                            DateScheduledArrival = new DateTime(2021, 12, 21, 1, 15, 16, 760, DateTimeKind.Unspecified).AddTicks(4557),
                            DateShipped = new DateTime(2021, 8, 30, 15, 43, 54, 746, DateTimeKind.Unspecified).AddTicks(8297)
                        });
                });

            modelBuilder.Entity("EPManifest.Core.ConsignorManifest", b =>
                {
                    b.HasOne("EPManifest.Core.Consignor", "Consignor")
                        .WithMany("ConsignorManifests")
                        .HasForeignKey("ConsignorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPManifest.Core.Manifest", "Manifest")
                        .WithMany("ConsignorManifests")
                        .HasForeignKey("ManifestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Consignor");

                    b.Navigation("Manifest");
                });

            modelBuilder.Entity("EPManifest.Core.Item", b =>
                {
                    b.HasOne("EPManifest.Core.Manifest", "Manifest")
                        .WithMany("Items")
                        .HasForeignKey("ManifestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manifest");
                });

            modelBuilder.Entity("EPManifest.Core.Manifest", b =>
                {
                    b.HasOne("EPManifest.Core.Carrier", "Carrier")
                        .WithMany("Manifests")
                        .HasForeignKey("CarrierId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EPManifest.Core.Consignee", "Consignee")
                        .WithMany("Manifests")
                        .HasForeignKey("ConsigneeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsOne("EPManifest.Core.Address", "ConsigneeAddress", b1 =>
                        {
                            b1.Property<int>("ManifestId")
                                .HasColumnType("int");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(7)
                                .IsUnicode(false)
                                .HasColumnType("varchar(7)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("char(2)");

                            b1.HasKey("ManifestId");

                            b1.ToTable("ConsigneeAddresses");

                            b1.WithOwner()
                                .HasForeignKey("ManifestId");

                            b1.HasData(
                                new
                                {
                                    ManifestId = 1,
                                    AddressLine1 = "83063 Pauline Rest",
                                    City = "Krajcikstad",
                                    PostalCode = "E5K 9K6",
                                    Province = "PE"
                                },
                                new
                                {
                                    ManifestId = 2,
                                    AddressLine1 = "25188 Pagac Shore",
                                    City = "New Jada",
                                    PostalCode = "A2Z 2W1",
                                    Province = "NU"
                                },
                                new
                                {
                                    ManifestId = 3,
                                    AddressLine1 = "22582 Hand Track",
                                    City = "East Bernadette",
                                    PostalCode = "K9H 4A4",
                                    Province = "NB"
                                },
                                new
                                {
                                    ManifestId = 4,
                                    AddressLine1 = "20979 Samir Turnpike",
                                    City = "Christopheland",
                                    PostalCode = "B2F 4V5",
                                    Province = "MB"
                                },
                                new
                                {
                                    ManifestId = 5,
                                    AddressLine1 = "15121 Leonie Mountain",
                                    City = "Kuphalville",
                                    PostalCode = "V3A 0K6",
                                    Province = "NL"
                                },
                                new
                                {
                                    ManifestId = 6,
                                    AddressLine1 = "11822 Shields Prairie",
                                    City = "Shanafurt",
                                    PostalCode = "L2V 6I7",
                                    Province = "NT"
                                },
                                new
                                {
                                    ManifestId = 7,
                                    AddressLine1 = "007 Murazik Corner",
                                    City = "New Ceasar",
                                    PostalCode = "Y1H 7F5",
                                    Province = "BC"
                                },
                                new
                                {
                                    ManifestId = 8,
                                    AddressLine1 = "9408 Rippin Valley",
                                    City = "Tevinstad",
                                    PostalCode = "K7R 9I5",
                                    Province = "NS"
                                },
                                new
                                {
                                    ManifestId = 9,
                                    AddressLine1 = "350 Brakus Key",
                                    City = "Shaniaport",
                                    PostalCode = "R0H 6X7",
                                    Province = "MB"
                                },
                                new
                                {
                                    ManifestId = 10,
                                    AddressLine1 = "238 Fadel Circles",
                                    City = "Christiansenmouth",
                                    PostalCode = "J2Y 2B8",
                                    Province = "NT"
                                },
                                new
                                {
                                    ManifestId = 11,
                                    AddressLine1 = "98134 Hoppe Knoll",
                                    City = "New Elissachester",
                                    PostalCode = "V9J 7Y6",
                                    Province = "PE"
                                },
                                new
                                {
                                    ManifestId = 12,
                                    AddressLine1 = "205 Larkin Junction",
                                    City = "West Jaronshire",
                                    PostalCode = "J6E 5O8",
                                    Province = "NT"
                                },
                                new
                                {
                                    ManifestId = 13,
                                    AddressLine1 = "280 Wilderman Plaza",
                                    City = "Jaclynbury",
                                    PostalCode = "M1D 9O0",
                                    Province = "NS"
                                },
                                new
                                {
                                    ManifestId = 14,
                                    AddressLine1 = "11768 Stanton Place",
                                    City = "East Miracle",
                                    PostalCode = "T9P 7M7",
                                    Province = "NB"
                                },
                                new
                                {
                                    ManifestId = 15,
                                    AddressLine1 = "08798 Emard Inlet",
                                    City = "West Alexanne",
                                    PostalCode = "R5E 4I7",
                                    Province = "AB"
                                },
                                new
                                {
                                    ManifestId = 16,
                                    AddressLine1 = "570 Zemlak Rest",
                                    City = "Kiaraport",
                                    PostalCode = "M7C 5L4",
                                    Province = "NL"
                                },
                                new
                                {
                                    ManifestId = 17,
                                    AddressLine1 = "8501 Gillian Shore",
                                    City = "Leonieburgh",
                                    PostalCode = "C4S 9B6",
                                    Province = "PE"
                                },
                                new
                                {
                                    ManifestId = 18,
                                    AddressLine1 = "9439 Hegmann Spur",
                                    City = "Fishertown",
                                    PostalCode = "B7Z 7K4",
                                    Province = "AB"
                                },
                                new
                                {
                                    ManifestId = 19,
                                    AddressLine1 = "144 Marcel Islands",
                                    City = "Hirthetown",
                                    PostalCode = "V0X 8Y6",
                                    Province = "PE"
                                },
                                new
                                {
                                    ManifestId = 20,
                                    AddressLine1 = "6295 Federico Locks",
                                    City = "East Anika",
                                    PostalCode = "N3N 9X0",
                                    Province = "AB"
                                });
                        });

                    b.OwnsOne("EPManifest.Core.Address", "ConsignorAddress", b1 =>
                        {
                            b1.Property<int>("ManifestId")
                                .HasColumnType("int");

                            b1.Property<string>("AddressLine1")
                                .IsRequired()
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("City")
                                .IsRequired()
                                .HasMaxLength(50)
                                .HasColumnType("nvarchar(50)");

                            b1.Property<string>("PhoneNumber")
                                .HasMaxLength(10)
                                .HasColumnType("nvarchar(10)");

                            b1.Property<string>("PostalCode")
                                .IsRequired()
                                .HasMaxLength(7)
                                .IsUnicode(false)
                                .HasColumnType("varchar(7)");

                            b1.Property<string>("Province")
                                .IsRequired()
                                .HasColumnType("char(2)");

                            b1.HasKey("ManifestId");

                            b1.ToTable("ConsignorAddresses");

                            b1.WithOwner()
                                .HasForeignKey("ManifestId");

                            b1.HasData(
                                new
                                {
                                    ManifestId = 1,
                                    AddressLine1 = "6980 Finn Mountain",
                                    City = "North Dedric",
                                    PostalCode = "T3Q 8B7",
                                    Province = "BC"
                                },
                                new
                                {
                                    ManifestId = 2,
                                    AddressLine1 = "927 Jaiden Plain",
                                    City = "West Jayceeborough",
                                    PostalCode = "Y8B 1Z2",
                                    Province = "AB"
                                },
                                new
                                {
                                    ManifestId = 3,
                                    AddressLine1 = "552 Mohammed Extension",
                                    City = "Gottliebfort",
                                    PostalCode = "L4C 5F3",
                                    Province = "SK"
                                },
                                new
                                {
                                    ManifestId = 4,
                                    AddressLine1 = "7450 Demetrius Trace",
                                    City = "Gloverbury",
                                    PostalCode = "C6Q 1B8",
                                    Province = "ON"
                                },
                                new
                                {
                                    ManifestId = 5,
                                    AddressLine1 = "24449 Bosco Road",
                                    City = "Baileybury",
                                    PostalCode = "R1K 7Q8",
                                    Province = "NS"
                                },
                                new
                                {
                                    ManifestId = 6,
                                    AddressLine1 = "96563 Kertzmann Point",
                                    City = "Grantton",
                                    PostalCode = "B1B 4S9",
                                    Province = "ON"
                                },
                                new
                                {
                                    ManifestId = 7,
                                    AddressLine1 = "88709 Kaitlin Extensions",
                                    City = "Lake Keenanville",
                                    PostalCode = "X6N 4T6",
                                    Province = "AB"
                                },
                                new
                                {
                                    ManifestId = 8,
                                    AddressLine1 = "965 Caleigh Pass",
                                    City = "Briaside",
                                    PostalCode = "P4L 1D2",
                                    Province = "AB"
                                },
                                new
                                {
                                    ManifestId = 9,
                                    AddressLine1 = "10786 Legros Shoals",
                                    City = "South Kaiatown",
                                    PostalCode = "H5O 0K6",
                                    Province = "SK"
                                },
                                new
                                {
                                    ManifestId = 10,
                                    AddressLine1 = "37966 Jayme Squares",
                                    City = "Jeffreyburgh",
                                    PostalCode = "R8J 9X1",
                                    Province = "ON"
                                },
                                new
                                {
                                    ManifestId = 11,
                                    AddressLine1 = "58139 Erick Camp",
                                    City = "Collinschester",
                                    PostalCode = "V8N 0Y7",
                                    Province = "NU"
                                },
                                new
                                {
                                    ManifestId = 12,
                                    AddressLine1 = "023 Suzanne Locks",
                                    City = "South Cale",
                                    PostalCode = "B2T 8E9",
                                    Province = "NS"
                                },
                                new
                                {
                                    ManifestId = 13,
                                    AddressLine1 = "78576 Keyshawn Park",
                                    City = "Schneiderborough",
                                    PostalCode = "A1W 0W1",
                                    Province = "NB"
                                },
                                new
                                {
                                    ManifestId = 14,
                                    AddressLine1 = "98204 Kacey Tunnel",
                                    City = "Bayerchester",
                                    PostalCode = "N7I 7G4",
                                    Province = "NS"
                                },
                                new
                                {
                                    ManifestId = 15,
                                    AddressLine1 = "418 Laura Motorway",
                                    City = "Yadirabury",
                                    PostalCode = "Y0C 4W9",
                                    Province = "ON"
                                },
                                new
                                {
                                    ManifestId = 16,
                                    AddressLine1 = "2870 Lindgren Parkway",
                                    City = "Miltonburgh",
                                    PostalCode = "C7J 0A7",
                                    Province = "PE"
                                },
                                new
                                {
                                    ManifestId = 17,
                                    AddressLine1 = "70010 Orville Well",
                                    City = "Jermeyville",
                                    PostalCode = "K0P 5N2",
                                    Province = "QC"
                                },
                                new
                                {
                                    ManifestId = 18,
                                    AddressLine1 = "122 Hirthe Isle",
                                    City = "Port Lelandside",
                                    PostalCode = "R1X 2W9",
                                    Province = "YT"
                                },
                                new
                                {
                                    ManifestId = 19,
                                    AddressLine1 = "3254 Marcus Ridge",
                                    City = "North Claude",
                                    PostalCode = "M7T 9H0",
                                    Province = "ON"
                                },
                                new
                                {
                                    ManifestId = 20,
                                    AddressLine1 = "147 Sipes Street",
                                    City = "South Octavia",
                                    PostalCode = "S7S 7T8",
                                    Province = "NT"
                                });
                        });

                    b.Navigation("Carrier");

                    b.Navigation("Consignee");

                    b.Navigation("ConsigneeAddress");

                    b.Navigation("ConsignorAddress");
                });

            modelBuilder.Entity("EPManifest.Core.Carrier", b =>
                {
                    b.Navigation("Manifests");
                });

            modelBuilder.Entity("EPManifest.Core.Consignee", b =>
                {
                    b.Navigation("Manifests");
                });

            modelBuilder.Entity("EPManifest.Core.Consignor", b =>
                {
                    b.Navigation("ConsignorManifests");
                });

            modelBuilder.Entity("EPManifest.Core.Manifest", b =>
                {
                    b.Navigation("ConsignorManifests");

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
